<?php

namespace BusinessModelBundle\Entity;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
			
			public function myFindAll()
			{
			return $this->createQueryBuilder('u')->getQuery()->getResult();
			}

			
			public function myFindOne($id)
			{
			// On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
			$qb = $this->createQueryBuilder('u')
			->where('u.id = :id')
			->setParameter('id', $id);
			return ($qb->getQuery()->getResult()==null)? null : $qb->getQuery()->getResult()[0];
			}
			
			
			public function myFindUsername($username)
			{
				
			// On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
			$qb = $this->createQueryBuilder('u')
			->where('u.username = :username')
			->setParameter('username', $username);
			return ($qb->getQuery()->getResult()==null)? null : $qb->getQuery()->getResult()[0];
			}
			
			
			public function myFindEmail($email)
			{
			// On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
			$qb = $this->createQueryBuilder('u')
			->where('u.email = :email')
			->setParameter('email', $email);
			return ($qb->getQuery()->getResult()==null)? null : $qb->getQuery()->getResult()[0];
			}
			
			
			public function myFindUsernameOREmail($username,$email)
			{
			// On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
			$qb = $this->createQueryBuilder('u')
			->where('u.email = :email OR u.username = :username')
			->setParameter('email', $email)
			->setParameter('username', $username);
			return ($qb->getQuery()->getResult()==null)? null : $qb->getQuery()->getResult()[0];
			}
			
			public function myFindEmailCodePassword($email,$codePwd)
			{
			// On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
			$qb = $this->createQueryBuilder('u')
			->where('u.email = :email AND u.codePassword = :codePwd')
			->setParameter('email', $email)
			->setParameter('codePwd', $codePwd);
			return ($qb->getQuery()->getResult()==null)? null : $qb->getQuery()->getResult()[0];
			}


}
